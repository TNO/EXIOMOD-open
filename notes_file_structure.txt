* File:   notes_file_structure.txt
* Author: Jelmer Ypma
* Date:   17 October 2014

How would this work in projects?

1. Get template model from github, copy somewhere, and make changes.

Should general model code be inside the project or not?
+ if the master changes the project is still reproducible, because the general model at the start of the project is still used and potentially in its own github repository.
- this makes it easy to change the underlying master code and would break the logic of a separation of general code and project-specific code. => this can be solved by re-arranging the directory structure of the template.

Guidelines:
- Keep general code and project code separate.
- Only after a project has finished we want to see whether we want to merge things back into master. This should be done in a separate project, because in the project itself we did not change anything in the general CGE code. So after the project is finished, we may need to move code from the project files to the general CGE code files.
- Conform to styling guide (e.g. two spaces indentation, variable names scheme, ...).
- Create new main##.gms file for every simulation.
- Save results from simulation run in different directory.
- Use config.gms only for project-specific settings, not for simulation-specific settings, those should go into main##.gms
- Do not make changes in general CGE library code (master).

Think about what to do with data. How to keep the data separate from the model (e.g. what if we want to use GTAP or WIOD instead of EXIOBASE)?

What does the general CGE model contain?
- definition of sets for detailed EXIOBASE data.
- GAMS code to do data aggregation for EXIOBASE data.
- GAMS code with calibration.
- GAMS code with model equations.
- GAMS utilities (comparing variables, RAS procedure). These should probably be in a separate module.

What does the project template contain?
- the general CGE model is part of the model template.
- there is a clear distinction between code the user should change and code the user should not change.
- code that the user should change is:
  - main##.gms
  - sets/model -> we probably want to have different classifications as examples.
  - scr/simulation -> this could be as simple as calling a general CGE code simulation.

What would be a good directory structure for the project template?
